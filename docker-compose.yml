version: '3.9'

services:
  redis:
    image: redis:6.2.6-alpine
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - pgnetwork

  elasticsearch:
    image: elasticsearch:7.16.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - pgnetwork

  kibana:
    image: kibana:7.16.3
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - pgnetwork

  postgres:
    build:
      context: .
      dockerfile: PostgresDockerfile
    container_name: postgresdb
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: nikhil
      POSTGRES_PASSWORD: nikhil
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - pgnetwork
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "nikhil@nikhil.com"
      PGADMIN_DEFAULT_PASSWORD: "nikhil"
    ports:
      - "5433:80"
    restart: unless-stopped
    networks:
      - pgnetwork
    depends_on:
      - postgres

  pgsync:
    build:
      context: .
      dockerfile: PgsyncDockerfile
    container_name: pgsync
    environment:
      - PG_USER=nikhil
      - PG_PASSWORD=nikhil
      - PG_HOST=postgres
      - PG_DATABASE=ascendia
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - pgnetwork

volumes:
  pgdata:
    external: true
  elasticsearch-data:
    driver: local

networks:

  pgnetwork:
    driver: bridge

# adminer:
# image: adminer
# restart: always
# ports:
# - 8080:8080
